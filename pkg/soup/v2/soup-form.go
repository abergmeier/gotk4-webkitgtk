// Code generated by girgen. DO NOT EDIT.

package soup

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: libsoup-2.4
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <libsoup/soup.h>
import "C"

// FormRequestNewFromMultipart creates a new SoupMessage and sets it up to send
// multipart to uri via POST.
//
// To send a <literal>"multipart/form-data"</literal> POST, first create a
// Multipart, using SOUP_FORM_MIME_TYPE_MULTIPART as the MIME type. Then use
// soup_multipart_append_form_string() and soup_multipart_append_form_file() to
// add the value of each form control to the multipart. (These are just
// convenience methods, and you can use soup_multipart_append_part() if you need
// greater control over the part headers.) Finally, call
// soup_form_request_new_from_multipart() to serialize the multipart structure
// and create a Message.
func FormRequestNewFromMultipart(uri string, multipart *Multipart) *Message {
	var _arg1 *C.char          // out
	var _arg2 *C.SoupMultipart // out
	var _cret *C.SoupMessage   // in

	_arg1 = (*C.char)(unsafe.Pointer(C.CString(uri)))
	_arg2 = (*C.SoupMultipart)(gextras.StructNative(unsafe.Pointer(multipart)))

	_cret = C.soup_form_request_new_from_multipart(_arg1, _arg2)

	var _message *Message // out

	_message = wrapMessage(externglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _message
}
