// Code generated by girgen. DO NOT EDIT.

package soupgnome

import (
	_ "runtime/cgo"
	"unsafe"

	"github.com/diamondburned/gotk4-webkitgtk/pkg/soup/v2"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: libsoup-gnome-2.4
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <libsoup/soup-gnome.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.soup_password_manager_gnome_get_type()), F: marshalPasswordManagerGNOMEer},
		{T: externglib.Type(C.soup_proxy_resolver_gnome_get_type()), F: marshalProxyResolverGNOMEer},
	})
}

type PasswordManagerGNOME struct {
	*externglib.Object

	soup.SessionFeature
}

var _ gextras.Nativer = (*PasswordManagerGNOME)(nil)

func wrapPasswordManagerGNOME(obj *externglib.Object) *PasswordManagerGNOME {
	return &PasswordManagerGNOME{
		Object: obj,
		SessionFeature: soup.SessionFeature{
			Object: obj,
		},
	}
}

func marshalPasswordManagerGNOMEer(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapPasswordManagerGNOME(obj), nil
}

func (*PasswordManagerGNOME) privatePasswordManagerGNOME() {}

type ProxyResolverGNOME struct {
	soup.ProxyResolverDefault
}

var _ gextras.Nativer = (*ProxyResolverGNOME)(nil)

func wrapProxyResolverGNOME(obj *externglib.Object) *ProxyResolverGNOME {
	return &ProxyResolverGNOME{
		ProxyResolverDefault: soup.ProxyResolverDefault{
			Object: obj,
			ProxyURIResolver: soup.ProxyURIResolver{
				SessionFeature: soup.SessionFeature{
					Object: obj,
				},
			},
		},
	}
}

func marshalProxyResolverGNOMEer(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapProxyResolverGNOME(obj), nil
}

func (*ProxyResolverGNOME) privateProxyResolverGNOME() {}
