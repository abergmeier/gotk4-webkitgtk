// Code generated by girgen. DO NOT EDIT.

package webkit2

import (
	"runtime"
	"unsafe"

	externglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: webkit2gtk-4.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit2.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.webkit_permission_request_get_type()), F: marshalPermissionRequester},
	})
}

// PermissionRequestOverrider contains methods that are overridable.
//
// As of right now, interface overriding and subclassing is not supported
// yet, so the interface currently has no use.
type PermissionRequestOverrider interface {
	// Allow the action which triggered this request.
	Allow()
	// Deny the action which triggered this request.
	Deny()
}

type PermissionRequest struct {
	*externglib.Object
}

var (
	_ externglib.Objector = (*PermissionRequest)(nil)
)

// PermissionRequester describes PermissionRequest's interface methods.
type PermissionRequester interface {
	externglib.Objector

	// Allow the action which triggered this request.
	Allow()
	// Deny the action which triggered this request.
	Deny()
}

var _ PermissionRequester = (*PermissionRequest)(nil)

func wrapPermissionRequest(obj *externglib.Object) *PermissionRequest {
	return &PermissionRequest{
		Object: obj,
	}
}

func marshalPermissionRequester(p uintptr) (interface{}, error) {
	return wrapPermissionRequest(externglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Allow the action which triggered this request.
func (request *PermissionRequest) Allow() {
	var _arg0 *C.WebKitPermissionRequest // out

	_arg0 = (*C.WebKitPermissionRequest)(unsafe.Pointer(request.Native()))

	C.webkit_permission_request_allow(_arg0)
	runtime.KeepAlive(request)
}

// Deny the action which triggered this request.
func (request *PermissionRequest) Deny() {
	var _arg0 *C.WebKitPermissionRequest // out

	_arg0 = (*C.WebKitPermissionRequest)(unsafe.Pointer(request.Native()))

	C.webkit_permission_request_deny(_arg0)
	runtime.KeepAlive(request)
}
