// Code generated by girgen. DO NOT EDIT.

package webkit2

// #cgo pkg-config: webkit2gtk-4.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <webkit2/webkit2.h>
import "C"

// MAJOR_VERSION: like webkit_get_major_version(), but from the headers used at
// application compile time, rather than from the library linked against at
// application run time.
const MAJOR_VERSION = 2

// MICRO_VERSION: like webkit_get_micro_version(), but from the headers used at
// application compile time, rather than from the library linked against at
// application run time.
const MICRO_VERSION = 1

// MINOR_VERSION: like webkit_get_minor_version(), but from the headers used at
// application compile time, rather than from the library linked against at
// application run time.
const MINOR_VERSION = 32

// GetMajorVersion returns the major version number of the WebKit library. (e.g.
// in WebKit version 1.8.3 this is 1.)
//
// This function is in the library, so it represents the WebKit library your
// code is running against. Contrast with the BKIT_MAJOR_VERSION macro, which
// represents the major version of the WebKit headers you have included when
// compiling your code.
func GetMajorVersion() uint32 {
	var _cret C.guint // in

	_cret = C.webkit_get_major_version()

	var _guint uint32 // out

	_guint = uint32(_cret)

	return _guint
}

// GetMicroVersion returns the micro version number of the WebKit library. (e.g.
// in WebKit version 1.8.3 this is 3.)
//
// This function is in the library, so it represents the WebKit library your
// code is running against. Contrast with the BKIT_MICRO_VERSION macro, which
// represents the micro version of the WebKit headers you have included when
// compiling your code.
func GetMicroVersion() uint32 {
	var _cret C.guint // in

	_cret = C.webkit_get_micro_version()

	var _guint uint32 // out

	_guint = uint32(_cret)

	return _guint
}

// GetMinorVersion returns the minor version number of the WebKit library. (e.g.
// in WebKit version 1.8.3 this is 8.)
//
// This function is in the library, so it represents the WebKit library your
// code is running against. Contrast with the BKIT_MINOR_VERSION macro, which
// represents the minor version of the WebKit headers you have included when
// compiling your code.
func GetMinorVersion() uint32 {
	var _cret C.guint // in

	_cret = C.webkit_get_minor_version()

	var _guint uint32 // out

	_guint = uint32(_cret)

	return _guint
}
