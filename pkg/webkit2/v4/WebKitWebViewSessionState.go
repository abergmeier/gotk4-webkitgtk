// Code generated by girgen. DO NOT EDIT.

package webkit2

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: webkit2gtk-4.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <webkit2/webkit2.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.webkit_web_view_session_state_get_type()), F: marshalWebViewSessionState},
	})
}

type WebViewSessionState struct {
	nocopy gextras.NoCopy
	native *C.WebKitWebViewSessionState
}

func marshalWebViewSessionState(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return &WebViewSessionState{native: (*C.WebKitWebViewSessionState)(unsafe.Pointer(b))}, nil
}

// Ref: atomically increments the reference count of state by one. This function
// is MT-safe and may be called from any thread.
func (state *WebViewSessionState) ref() *WebViewSessionState {
	var _arg0 *C.WebKitWebViewSessionState // out
	var _cret *C.WebKitWebViewSessionState // in

	_arg0 = (*C.WebKitWebViewSessionState)(gextras.StructNative(unsafe.Pointer(state)))

	_cret = C.webkit_web_view_session_state_ref(_arg0)

	var _webViewSessionState *WebViewSessionState // out

	_webViewSessionState = (*WebViewSessionState)(gextras.NewStructNative(unsafe.Pointer(_cret)))
	C.webkit_web_view_session_state_ref(_cret)
	runtime.SetFinalizer(_webViewSessionState, func(v *WebViewSessionState) {
		C.webkit_web_view_session_state_unref((*C.WebKitWebViewSessionState)(gextras.StructNative(unsafe.Pointer(v))))
	})

	return _webViewSessionState
}

// Unref: atomically decrements the reference count of state by one. If the
// reference count drops to 0, all memory allocated by the
// KitWebViewSessionState is released. This function is MT-safe and may be
// called from any thread.
func (state *WebViewSessionState) unref() {
	var _arg0 *C.WebKitWebViewSessionState // out

	_arg0 = (*C.WebKitWebViewSessionState)(gextras.StructNative(unsafe.Pointer(state)))

	C.webkit_web_view_session_state_unref(_arg0)
}
