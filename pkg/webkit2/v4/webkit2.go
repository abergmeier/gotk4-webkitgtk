// Code generated by girgen. DO NOT EDIT.

package webkit2

import (
	"fmt"
	_ "runtime/cgo"
	"unsafe"

	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: webkit2gtk-4.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <webkit2/webkit2.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.webkit_user_content_filter_error_get_type()), F: marshalUserContentFilterError},
	})
}

type UserContentFilterError int

const (
	// UserContentFilterErrorInvalidSource: JSON source for a content filter is
	// invalid.
	UserContentFilterErrorInvalidSource UserContentFilterError = iota
	// UserContentFilterErrorNotFound: requested content filter could not be
	// found.
	UserContentFilterErrorNotFound
)

func marshalUserContentFilterError(p uintptr) (interface{}, error) {
	return UserContentFilterError(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

// String returns the name in string for UserContentFilterError.
func (u UserContentFilterError) String() string {
	switch u {
	case UserContentFilterErrorInvalidSource:
		return "InvalidSource"
	case UserContentFilterErrorNotFound:
		return "NotFound"
	default:
		return fmt.Sprintf("UserContentFilterError(%d)", u)
	}
}
